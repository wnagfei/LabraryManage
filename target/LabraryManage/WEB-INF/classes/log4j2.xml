<?xml version="1.0" encoding="UTF-8"?>
<configuration status="OFF" monitorInterval="1800">
    <properties>
        <!--优先级从高到低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、ALL -->
        <property name="LOG_LEVEL">DEBUG</property><!-- 日志输出级别 -->
        <property name="FILE_SIZE">500MB</property><!--日志切割的最小单位 -->

        <property name="LOG_HOME">E:\logs\LabraryManage</property>
        <property name="FILE_OUT_NAME">output</property>
        <property name="FILE_Error_NAME">error</property>

        <property name="LOG_PATTERN">%d{%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level
            %class{36} %L %M - %msg%xEx%n</property>
        <property name="ROLLING_OUT_NAME">${LOG_HOME}/%d{yyyy-MM-dd}/${FILE_OUT_NAME}-%d{yyyy-MM-dd-HH}.log.gz</property>
        <property name="ROLLING_ERROR_NAME">${LOG_HOME}/%d{yyyy-MM-dd}/${FILE_Error_NAME}-%d{yyyy-MM-dd}-%i.log.gz</property>
        <property name="Log_MAX_CNT">3000</property><!-- 保留日志文件数量 -->
    </properties>

    <!--先定义所有的appender -->
    <Appenders>
        <!--这个输出控制台的配置 -->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <ThresholdFilter level="trace" onMatch="ACCEPT"
                             onMismatch="DENY" />
            <!--这个都知道是输出日志的格式 -->
            <PatternLayout pattern="${LOG_PATTERN}" />
        </Console>

        <!--文件会打印出所有信息,单个文件 -->
        <!-- <File name="File" fileName="${LOG_HOME}/logfile.log" append="false">
            <PatternLayout pattern="${LOG_PATTERN}" /> </File> -->

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="RollingFile" fileName="${LOG_HOME}/${FILE_OUT_NAME}.log"
                     filePattern="${ROLLING_OUT_NAME}">
            <PatternLayout pattern="${LOG_PATTERN}" />
            <Policies>
                <TimeBasedTriggeringPolicy interval="4"
                                           modulate="true" />
                <!-- <SizeBasedTriggeringPolicy size="${FILE_SIZE}" /> -->
            </Policies>

            <!-- 表示压缩包，最多保留n个 -->
            <DefaultRolloverStrategy max="${Log_MAX_CNT}" />
            <Filters>
                <ThresholdFilter level="error" onMatch="DENY"
                                 onMismatch="NEUTRAL" />
                <ThresholdFilter level="${LOG_LEVEL}" onMatch="ACCEPT"
                                 onMismatch="DENY" />
            </Filters>
        </RollingFile>

        <!-- 输出错误日志 -->
        <RollingFile name="RollingFileError" fileName="${LOG_HOME}/${FILE_Error_NAME}.log"
                     filePattern="${ROLLING_ERROR_NAME}">
            <PatternLayout pattern="${LOG_PATTERN}" />
            <Policies>
                <TimeBasedTriggeringPolicy interval="1"
                                           modulate="true" />
                <!-- <SizeBasedTriggeringPolicy size="${FILE_SIZE}" /> -->
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT"
                                 onMismatch="DENY" />
            </Filters>
        </RollingFile>
    </Appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <Loggers>
        <!--建立一个默认的root的logger -->
        <root level="${LOG_LEVEL}">
            <appender-ref ref="Console" />
            <appender-ref ref="RollingFile" />
            <appender-ref ref="RollingFileError" />
        </root>
    </Loggers>
</configuration>