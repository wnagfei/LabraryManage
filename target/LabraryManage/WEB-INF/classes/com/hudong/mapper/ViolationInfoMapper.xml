<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hudong.mapper.ViolationInfoMapper" >
  <resultMap id="BaseResultMap" type="com.hudong.model.ViolationInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="material_no" property="materialNo" jdbcType="VARCHAR" />
    <result column="violation_reason" property="violationReason" jdbcType="VARCHAR" />
    <result column="payfor_id" property="payforId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, teacher_id, student_id, material_no, violation_reason, payfor_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hudong.model.ViolationInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from violation_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from violation_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from violation_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hudong.model.ViolationInfoExample" >
    delete from violation_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hudong.model.ViolationInfo" >
    insert into violation_info (id, order_id, teacher_id, 
      student_id, material_no, violation_reason, 
      payfor_id)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{studentId,jdbcType=INTEGER}, #{materialNo,jdbcType=VARCHAR}, #{violationReason,jdbcType=VARCHAR}, 
      #{payforId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hudong.model.ViolationInfo" >
    insert into violation_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="materialNo != null" >
        material_no,
      </if>
      <if test="violationReason != null" >
        violation_reason,
      </if>
      <if test="payforId != null" >
        payfor_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="materialNo != null" >
        #{materialNo,jdbcType=VARCHAR},
      </if>
      <if test="violationReason != null" >
        #{violationReason,jdbcType=VARCHAR},
      </if>
      <if test="payforId != null" >
        #{payforId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hudong.model.ViolationInfoExample" resultType="java.lang.Integer" >
    select count(*) from violation_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update violation_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.materialNo != null" >
        material_no = #{record.materialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.violationReason != null" >
        violation_reason = #{record.violationReason,jdbcType=VARCHAR},
      </if>
      <if test="record.payforId != null" >
        payfor_id = #{record.payforId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update violation_info
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      material_no = #{record.materialNo,jdbcType=VARCHAR},
      violation_reason = #{record.violationReason,jdbcType=VARCHAR},
      payfor_id = #{record.payforId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hudong.model.ViolationInfo" >
    update violation_info
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="materialNo != null" >
        material_no = #{materialNo,jdbcType=VARCHAR},
      </if>
      <if test="violationReason != null" >
        violation_reason = #{violationReason,jdbcType=VARCHAR},
      </if>
      <if test="payforId != null" >
        payfor_id = #{payforId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hudong.model.ViolationInfo" >
    update violation_info
    set order_id = #{orderId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      material_no = #{materialNo,jdbcType=VARCHAR},
      violation_reason = #{violationReason,jdbcType=VARCHAR},
      payfor_id = #{payforId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>